---
layout: post
title: "OpenSSL bug CVE-2014-0160"
permalink: openssl-bug-cve-2014-0160
date: 2014-04-08
author: arma
category: blog
tags: ["openssl", "security advisory"]
---

A new OpenSSL vulnerability on 1.0.1 through 1.0.1f is out today, which [can be used to reveal memory to a connected client or server](https://www.openssl.org/news/vulnerabilities.html#2014-0160).

If you're using an older OpenSSL version, you're safe.

Note that this bug affects way more programs than just Tor â€” expect everybody who runs an https webserver to be scrambling today. If you need strong anonymity or privacy on the Internet, you might want to stay away from the Internet entirely for the next few days while things settle.

Here are our first thoughts on what Tor components are affected:

1. **Clients** : The browser part of Tor Browser shouldn't be affected, since it uses libnss rather than openssl. But the Tor client part is: Tor clients could possibly be induced to send sensitive information like "what sites you visited in this session" to your entry guards. If you're using TBB we'll have new bundles out shortly; if you're using your operating system's Tor package you should get a new OpenSSL package and then be sure to manually restart your Tor. [update: the bundles are out, and you should upgrade]
2. **Relays and bridges** : Tor relays and bridges could maybe be made to leak their medium-term onion keys (rotated once a week), or their long-term relay identity keys. An attacker who has your relay identity key can publish a new relay descriptor indicating that you're at a new location (not a particularly useful attack). An attacker who has your relay identity key, has your onion key, and can intercept traffic flows to your IP address can impersonate your relay (but remember that Tor's [multi-hop design](https://www.torproject.org/docs/faq#KeyManagement) means that attacking just one relay in the client's path is not very useful). In any case, best practice would be to update your OpenSSL package, discard all the files in keys/ in your DataDirectory, and restart your Tor to generate new keys. (You will need to update your MyFamily torrc lines if you run multiple relays.) [update: we've [cut the vulnerable relays out of the network](https://lists.torproject.org/pipermail/tor-relays/2014-April/004362.html)]
3. **Hidden services** : Tor hidden services might leak their long-term hidden service identity keys to their guard relays. Like the [last big OpenSSL bug](https://blog.torproject.org/blog/debian-openssl-flaw%3A-what-does-it-mean-tor-clients%3F), this shouldn't allow an attacker to identify the location of the hidden service [edit: if it's your entry guard that extracted your key, they know where they got it from]. Also, an attacker who knows the hidden service identity key can impersonate the hidden service. Best practice would be to move to a new hidden-service address at your convenience.
4. **Directory authorities** : In addition to the keys listed in the "relays and bridges" section above, Tor directory authorities might leak their medium-term authority signing keys. Once you've updated your OpenSSL package, you should generate a new signing key. Long-term directory authority identity keys are offline so should not be affected (whew). More tricky is that clients have your relay identity key hard-coded, so please don't rotate that yet. We'll see how this unfolds and try to think of a good solution there.
5. **Tails** is still tracking Debian oldstable, so it should not be affected by this bug.
6. **Orbot** looks vulnerable; they have some [new packages available for testing](https://lists.mayfirst.org/pipermail/guardian-dev/2014-April/003383.html).
7. The webservers in the [https://www.torproject.org/](https://www.torproject.org/ "https://www.torproject.org/") rotation needed (and got) upgrades. Maybe we'll need to throw away our torproject SSL web cert and get a new one too.

